% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convert_to.R
\name{convert_to_date_time}
\alias{convert_to_date_time}
\alias{convert_to_date_time.character}
\alias{convert_to_date_time.numeric}
\alias{convert_to_date_time.difftime}
\alias{convert_to_date_time.Duration}
\alias{convert_to_date_time.hms}
\alias{convert_to_date_time.Period}
\alias{convert_to_date_time.Date}
\alias{convert_to_date_time.POSIXt}
\alias{convert_to_date_time.Interval}
\title{Convert values to date/time}
\usage{
convert_to_date_time(x, class, orders = c("HMS", "HM", "H"), tz = "UTC")

\method{convert_to_date_time}{character}(x, class, orders = c("HMS", "HM", "H"), tz = "UTC")

\method{convert_to_date_time}{numeric}(x, class, orders = c("HMS", "HM", "H"), tz = "UTC")

\method{convert_to_date_time}{difftime}(x, class, orders = c("HMS", "HM", "H"), tz = "UTC")

\method{convert_to_date_time}{Duration}(x, class, orders = c("HMS", "HM", "H"), tz = "UTC")

\method{convert_to_date_time}{hms}(x, class, orders = c("HMS", "HM", "H"), tz = "UTC")

\method{convert_to_date_time}{Period}(x, class, orders = c("HMS", "HM", "H"), tz = "UTC")

\method{convert_to_date_time}{Date}(x, class, orders = c("HMS", "HM", "H"), tz = "UTC")

\method{convert_to_date_time}{POSIXt}(x, class, orders = c("HMS", "HM", "H"), tz = "UTC")

\method{convert_to_date_time}{Interval}(x, class, orders = c("HMS", "HM", "H"), tz = "UTC")
}
\arguments{
\item{x}{A \code{character} or \code{numeric} vector to parse to a date/time object
\strong{or} a date/time object of one of the following classes: \code{difftime},
\code{Duration}, \code{hms}, \code{Period}, \code{Date}, \code{POSIXct}, \code{POSIXlt}, and \code{Interval}.}

\item{class}{A character vector indicating the class of the output. Valid
values are: \code{"character"}, \code{"numeric"}, \code{"difftime"}, \code{"Duration"},
\code{"hms"}, \code{"Period"}, \code{"Date"}, \code{"POSIXct"} and \code{"POSIXlt"} (case
insensitive).}

\item{orders}{A character vector of date/time formats that correspond to \code{x}
(only needed If \code{x} is \code{character} or \code{numeric}). You can try to parse \code{x}
trying one or more formats, in order of importance. Check the lubridate
\code{\link[lubridate:parse_date_time]{lubridate::parse_date_time()}} function to see the right format values for
your input (default: \code{c("HMS", "HM", "H")}).}

\item{tz}{A character string that specifies the time zone with which to
convert/parse \code{x}. Time zones are used only if \code{class} is set to \code{"Date"},
\code{"POSIXct"}, or \code{"POSIXlt"} (see \link[base:timezones]{base::timezones} to know more) (default:
\code{"UTC"}).}
}
\value{
A date/time object of the indicated class.
}
\description{
\ifelse{html}{\out{<a href='https://www.tidyverse.org/lifecycle/#experimental'><img src='figures/lifecycle-experimental.svg' alt='Experimental lifecycle'></a>}}{\strong{Experimental}}

\code{convert_to_date_time} converts a date/time value to a predefined object
class in a fast and easy way. It can be use to convert/parse objects of class
\code{character}, \code{numeric}, \code{difftime}, \code{Duration}, \code{hms}, \code{Period}, \code{Date},
\code{POSIXct}, \code{POSIXlt} and \code{Interval}.

Conversions to decimal time and radians are also possible by using other
functions of the \code{convert_to} family. Check the details section to learn how.
}
\details{
\code{convert_to_date_time} is heavily based on tidyverse's \link[lubridate:lubridate-package]{lubridate::lubridate}
package. Its main objective is to group together several parse methods for
the main date/time classes.

This function was made to help users and to assist other functions from the
MCTQ package. It may not work for all cases. For better results, make sure
that your values fit the argument parameters on the function of your choice.
\subsection{Orders}{

This function is mainly based on lubridate's \code{\link[lubridate:parse_date_time]{lubridate::parse_date_time()}}
function. If needed, please check it documentation to set the right orders
for your input, .

\code{convert_to_date_time} is set by default to guess the most common used
patterns of data collection for the Munich Chronotype Questionnaire (MCTQ),
\emph{i.e} \code{"HMS"}, \code{"HM"}, and \code{"H"}.
}

\subsection{Limitations}{

\code{convert_to_date_time} uses \code{\link[lubridate:parse_date_time]{lubridate::parse_date_time()}} to convert
\code{character} and \code{numeric} objects. Since parse_date_time() output a \code{POSIXt}
object, \code{character} and \code{numeric} inputs cannot have time values equal or
greater than 24 hours.

That limits the set of \code{convert_to_date_time} applications (\emph{e.g} when you
want to parse a character to a \code{duration} object of 35 hours and 30 minutes).
A exception was made to \code{character} and \code{numeric} objects with \code{order = "H"}.

To go around this limitation, learn about how to use the
\link[lubridate:lubridate-package]{lubridate::lubridate} package.
}

\subsection{AM/PM signaling}{

If your value have an AM/PM signal in your value, \code{convert_to_date_time} will
try to fix it for you. You can also use the \code{"Op"} format on the \code{orders}
variable to match this indicators (check \code{\link[lubridate:parse_date_time]{lubridate::parse_date_time()}} to
know more about it).
}

\subsection{Converting date/time objects to decimal time or radians (or the reverse)}{

\code{convert_to_date_time} don't perform conversions for decimal time or radians,
but there are easy ways to do it with the \code{convert_to} family.
\itemize{
\item Converting a date/time object to decimal time or radian
}

Use \link{convert_to_decimal} to convert date/time objects to decimal time,
or use \link{convert_to_rad} to convert date/time objects to radians.
\itemize{
\item Converting a decimal time to a date/time object
}

Convert the decimal time to a date/time object using the \link[lubridate:duration]{duration family} of functions from the lubridate package. Then,
use \code{convert_to_date_time} to convert the value to what you which.

\strong{EXAMPLE}: To convert a decimal time of 23.5 hours to an object of class
\code{hms}, do:\preformatted{convert_to_date_time(lubridate::dhours(23.5), "hms")
#> 23:30:00
}
\itemize{
\item Converting radians to a date/time object
}

Convert the radian value to a decimal time using \link{convert_to_decimal}.
Them, follow the same procedure showed above.

\strong{EXAMPLE}: To convert 1.309 radian to an object of class \code{duration}, do:\preformatted{convert_to_date_time(lubridate::dhours(convert_to_decimal(1.309)),
"duration")
#> [1] "18000s (~5 hours)"
}
}

\subsection{NAs as output}{

\code{convert_to_date_time} will return a \code{NA} value when were not possible to
convert the input to the class assigned (sorry!).
}

\subsection{Outputs}{

Your output can change according to the class value indicated on \code{class}.
Here are some examples.
\itemize{
\item When \code{class = "character"}
}

\code{convert_to_date_time} will return a \code{\link[base:character]{base::as.character()}} output if \code{class}
is set to \code{"character"}. If there's no indication of year in \code{x},
\code{convert_to_date_time} will return only a character string with a \code{hms}
time.
\itemize{
\item When \code{class = "numeric"}
}

\code{convert_to_date_time} will return a \code{\link[base:numeric]{base::as.numeric()}} output if \code{class}
is set to \code{"numeric"}. For dates or date-time objects, the output is the
total of seconds from the UNIX origin date (\verb{1970-01-01 00:00:00 UTC}) (See
\href{https://en.wikipedia.org/wiki/Unix_time}{Unix time} to know more). For time
values, the output is the total of seconds.
\itemize{
\item \code{Interval} objects
}

Class \code{interval} objects are treated like \code{difftime} objects. That is,
\code{interval} objects will be converted to the time difference of the interval.
}
}
\note{
To do:
\itemize{
\item Fix conversion for hours equal or greater to 24 for \code{character} and
\code{numeric} variables.
\item Fix time attribution to \code{Periods} (remove functionality?).
}
}
\section{Time zone warning}{


You must be careful when working with different time zones (tz), because
some of them can be affected with Daylight Saving Time (DST).

It's unlike that you going to have to worry about time zone while working
with the MCTQ. Because of that, \code{convert_to_date_time} is set to \code{"UTC"} by
default for \code{Date}, \code{POSIXct}, and \code{POSIXlt} outputs.

To know more about how to handle date and time objects, check the chapter
"Dates and Times" from the book \href{https://r4ds.had.co.nz/dates-and-times.html}{R for Data Science} of Hadley Wickham &
Garrett Grolemund.
}

\examples{
## ** conversion of character or numeric values to date/time objects **
convert_to_date_time("10:00 PM", "hms")
#> [1] 22:00:00
convert_to_date_time("21:00 AM", "Period")
#> [1] "21H 0M 0S"
convert_to_date_time("2020-01-01 10:00:00", "Date", "ymd HMS")
#> [1] "2020-01-01"
convert_to_date_time(13, "POSIXct", "H")
#> [1] "0000-01-01 13:00:00 UTC"
convert_to_date_time("2020-01-01 12:31:05", "POSIXct", "ymd HMS", tz = "EST")
#> [1] "2020-01-01 12:31:05 EST"
convert_to_date_time("03/07/1982 13:00", "POSIXlt", "dmy HM")
#> [1] "1982-07-03 13:00:00 UTC"

## ** conversion between date/time objects **
convert_to_date_time(lubridate::duration(120), "hms")
#> 00:02:00
convert_to_date_time(hms::as_hms("13:45:05"), "POSIXct")
#> [1] "0000-01-01 13:45:05 UTC"
convert_to_date_time(lubridate::period(60), "POSIXct")
#> [1] "0000-01-01 00:01:00 UTC"
convert_to_date_time(as.POSIXct("2020-01-01 12:31:05", tz = "EST"),
                     "POSIXct")
#> [1] "2020-01-01 12:31:05 UTC"
}
\seealso{
Other Convert to date/time functions: 
\code{\link{convert_to_decimal}()},
\code{\link{convert_to_rad}()}
}
\concept{Convert to date/time functions}
