% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qplot_walk.R
\name{qplot_walk}
\alias{qplot_walk}
\title{Walk through distribution plots}
\usage{
qplot_walk(
  data,
  ...,
  cols = NULL,
  pattern = NULL,
  ignore = "character",
  remove_id = TRUE,
  midday_change = TRUE
)
}
\arguments{
\item{data}{An \code{atomic} or \verb{data frame} object.}

\item{...}{(optional) additional arguments to be passed to
\code{\link[ggplot2:qplot]{ggplot2::qplot()}}.}

\item{cols}{(optional) (only for data frames) a character vector indicating
columns names in \code{data} for plotting. If \code{NULL}, \code{qplot_walk()} will use
all columns in \code{data}. This setting only works if \code{pattern = NULL}
(default: \code{NULL}).}

\item{pattern}{(optional) (only for data frames) a string with a regular
expression to select columns names in \code{data} for plotting. This setting
only works if \code{cols = NULL} (default: \code{NULL}).}

\item{ignore}{(optional) (only for data frames) a character vector indicating
which object classes the function must ignore. This setting can be used
with \code{cols} and \code{pattern}. Assign \code{NULL} to disable this behavior (default:
\code{"character"}).}

\item{remove_id}{(optional) (only for data frames) a logical value indicating
if the function must ignore column names in \code{data} that match with
\code{"^id$|[\\\\._-]id$"} (default: \code{TRUE}).}

\item{midday_change}{(optional) a logical value indicating if the function
must apply a midday change for \code{hms} variables with values greater than
\code{22:00:00} (see Details section to learn more) (default: \code{TRUE}).}
}
\description{
\ifelse{html}{\out{<a href='https://www.tidyverse.org/lifecycle/#experimental'><img src='figures/lifecycle-experimental.svg' alt='Experimental lifecycle'></a>}}{\strong{Experimental}}

\code{qplot_walk()} helps you to visually assess the distribution of your data.
It uses \code{\link[ggplot2:qplot]{ggplot2::qplot()}} to walk through each selected variable from a
data frame.
}
\details{
\subsection{Requirements}{

This function requires the \link[grDevices:grDevices-package]{grDevices}
package loaded and can only run in interactive mode. This wont be a issue for
most people, since the package comes with a standard R installation and is
typically loaded by default. Most people also run R interactively.
}

\subsection{Plot recover}{

\code{qplot_walk()} erases all plots after it runs. For that reason, the function
first emits a dialog message warning the user of this behavior before it
runs. If you want to recover a single distribution plot, assign the variable
vector on the \code{data} argument.
}

\subsection{Additional arguments to \code{\link[ggplot2:qplot]{ggplot2::qplot()}}}{

\code{qplot_walk()} uses ggplot2 \code{\link[ggplot2:qplot]{ggplot2::qplot()}} to generate plots. If you are
familiar with \code{\link[ggplot2:qplot]{ggplot2::qplot()}}, you can pass additional arguments to the
function using the ellipsis argument (\code{...}).

Note that \code{x}, \code{y} and \code{data} arguments are reserved for \code{qplot_walk()}.
}

\subsection{\code{Duration}, \code{Period}, and \code{difftime} objects}{

In order to help with the visualization, \code{qplot_walk()} automatically
converts \code{Duration}, \code{Period}, and \code{difftime} objects to \code{hms}.
}

\subsection{Midday change}{

\code{hms} variables with values greater than \code{22:00:00} will automatically be
converted to POSIXct with a midday change, \emph{i.e.} all values with more
than 12 hours will represent day one, and all the rest will represent day 2.
This is made in order to better represent values that cross the midnight
hour.

You can disable this behavior using \code{midday_change = FALSE}.
}

\subsection{\code{id} variables}{

\code{qplot_walk()} will ignore any variable with the follow name pattern
\code{"^id$|[\\\\._-]id$"}, \emph{i.e} any variable named \code{id} or that ends with
\code{.id}, \verb{_id}, or \code{-id}.

You can disable this behavior using \code{remove_id = FALSE}.
}
}
\examples{
\dontrun{
qplot_walk(mctq::std_mctq$bt_w)
qplot_walk(mctq::std_mctq)
qplot_walk(mctq::std_mctq, cols = c("bt_w", "msf_sc"))
qplot_walk(mctq::std_mctq, pattern = "_w$")
qplot_walk(datasets::iris)
qplot_walk(datasets::mtcars)
}
}
\seealso{
Other utility functions: 
\code{\link{assign_date}()},
\code{\link{convert_to}()},
\code{\link{pretty_mctq}()},
\code{\link{random_mctq}()},
\code{\link{round_time}()},
\code{\link{shortest_interval}()},
\code{\link{sum_time}()},
\code{\link{validate_mctq}()}
}
\concept{utility functions}
